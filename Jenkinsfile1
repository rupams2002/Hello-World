pipeline {
    
    //agent none
    //agent any
    agent { label 'vm-dtb-aid-sg2-dv-sg2dops' }

    //agent { docker { image 'node:16-alpine' } }

    //environment{
        //dockerhub = credentials('Docker-Hub')
    //}    

	stages {

        stage('Check Environment Versions VM-2') {
            steps {
                //agent { label 'vm-dtb-aid-sg2-dv-sg2dops' }

				script{
					echo '********* Checking Versions *********'
					sh 'java -version'
					sh 'docker --version'
					sh 'docker compose version'
	       		    sh 'mvn -version'
				}
			}
        }
        
        stage('Start Build') {
            steps {
			    script {
                    //agent { label 'vm-dtb-aid-sg2-dv-sg2dops' }
                    
					echo '********* Start Building Project *********'
					sh 'whoami'

                    if( fileExists ("${env.WORKSPACE}/Hello-World")  ){
					  sh 'rm -R *'
                      sh "pwd"
                      sh 'sudo chown $USERS:users /run/docker.sock'
                    }


					echo '**** Start Git Clone ****'
					sh 'git clone https://github.com/rupams2002/Hello-World.git'
					//sh 'git branch'
					
                    dir("${env.WORKSPACE}/Hello-World"){
                      sh "pwd"
  					  sh 'mvn clean package'
  					  //sh 'mvn clean flyway:migrate -Dflyway.configFiles=flyway.conf package'

					  sh 'sudo docker container prune -f' //remove any stopped containers
  					  sh 'sudo docker system prune -a -f' //remove any stopped containers and all unused images
                      //sh 'kill -9 `sudo lsof -t -i:9001`'
  					  
  					  sh 'sudo docker rm -f $(sudo docker ps -q) || true'
  					  sh 'sudo docker build -t rupams2002/hello-world:1.0-SNAPSHOT .'
    				  //sh 'sudo docker run -d -p 9001:9001 --name helloworld  rupams2002/hello-world:1.0-SNAPSHOT'


                      withCredentials([string(credentialsId: 'DockerHub-PWD-SecretText', variable: 'dockerhubpwd')]) {
      				  	  //sh 'sudo docker login -u $dockerhub_USR -p ${dockerhubpwd}'
      					  sh 'sudo docker login -u rupams2002 -p ${dockerhubpwd}'
                      }
                      
  					  //sh 'docker tag mohammed/hello-world:1.0-SNAPSHOT rupams2002/hello-world:1.0-SNAPSHOT'  // If image and tag is different then match tag with docker hub. in my case rupams2002/xxxxxxxxx
  					  sh 'sudo docker push rupams2002/hello-world:1.0-SNAPSHOT'

  					  //sh 'mvn com.microsoft.azure:azure-spring-cloud-maven-plugin:1.3.0:config'
                    }					
                }
            }
        }
         
/*        
        stage('Create MS SQL') {
            steps {
			    script {
                    //agent { label 'vm-dtb-aid-sg2-dv-sg2dops' }
			        
                    dir("${env.WORKSPACE}/Hello-World"){
    					echo '********* Start MS SQL *********'
                        sh 'sudo docker compose up -d'
                        //sh 'sudo docker compose ps'

                        //withCredentials([string(credentialsId: 'DockerHub-PWD-SecretText', variable: 'dockerhubpwd')]) {
                        //    sh 'sudo docker login -u rupams2002 -p ${dockerhubpwd}'
                        //}
  					    //sh 'sudo docker push mcr.microsoft.com/mssql/server:2017-latest'
                    }
                }
            }
        }
*/

	}

	
}